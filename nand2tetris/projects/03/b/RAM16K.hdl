// PROGRAMMER: William H. Weiskopf
// USERID: WWEISKOP
// COURSE: CSCI-410
// TERM: FALL 2013
// This file is based on a file from www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[0..1], a=s1, b=s2, c=s3, d=s4);
    RAM4K(in=in, load=s1, address=address[2..13], out=out1);
    RAM4K(in=in, load=s2, address=address[2..13], out=out2);
    RAM4K(in=in, load=s3, address=address[2..13], out=out3);
    RAM4K(in=in, load=s4, address=address[2..13], out=out4);
	Mux4Way16(a=out1, b=out2, c=out3, d=out4, sel=address[0..1], out=out);
}
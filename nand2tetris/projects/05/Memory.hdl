// PROGRAMMER: William H. Weiskopf
// USERID: WWEISKOP
// COURSE: CSCI-410
// TERM: FALL 2013
// This file is based on a file from www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output in the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];
	
	PARTS:
		// RAM
    Not(in=address[14], out=addr14not);
    And(a=load, b=addr14not, out=ramload);
    RAM16K(in=in, address=address[0..13], load=ramload, out=ramout);

    // SCREEN
    Not(in=address[13], out=addr13not);
    And(a=address[14], b=addr13not, out=s1);
    And(a=load, b=s1, out=screenload);
    Screen(in=in, address=address[0..12], load=screenload, out=screenout);

    // KEYBOARD
    Keyboard(out=keyboardout);
	And(a=address[14], b=address[13], out=keyboardOr);
    Mux16(a=false, b=keyboardout, sel=keyboardOr, out=inputout);

    // MUX
    Mux4Way16(a=ramout, b=ramout, c=screenout, d=inputout, sel=address[13..14], out=out);
}
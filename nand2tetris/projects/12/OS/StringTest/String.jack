// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
    field Array contents;
    field int length;
    field int size;

    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {
        if( maxLength = 0 ) {
            let maxLength = 1;
        }
        let contents = Array.new(maxLength);
        let length = 0;
        let size = maxLength;
        return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
        do Array.dispose(contents);
        return;
    }

    /** Returns the current length of this String. */
    method int length() {
        return length;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
        return contents[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
        let contents[j] = c;
        return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
        if (length < size) {
            let contents[length] = c;
            let length = length + 1;
        }
        return this;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
        if (length > 0) {
            let length = length - 1;
        }
        return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
        var int value;
        var int i;

        let i = 0;
        if (contents[i] = 45) {
            let i = 1;
        }
        while ((i < length) & digit(contents[i])) {
            let value = 10*value + contents[i] - 48;
            let i = i + 1;
        }

        if (contents[0] = 45) {
            let value = -value;
        }
        return value;
    }

    method boolean digit(char c) {
        return ((c > 47) & (c < 58));
    }

    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {
        let length = 0;
        if (number < 0) {
            let number = -number;
            do appendChar(45);
        }
        do intMachine(number);
        return;
    }

    method void intMachine(int number) { 
        if(number < 10) {
            do appendChar(number + 48);
        } else {
            do intMachine(number/10);
            do appendChar(number - (10*(number/10)) + 48);
        }
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
